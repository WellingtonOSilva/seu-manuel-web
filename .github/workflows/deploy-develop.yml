name: Deploy Laravel to AWS Lambda (Develop)

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    name: Build & Deploy Develop
    runs-on: ubuntu-latest
    environment: develop

    env:
      AWS_REGION: us-east-1
      APP_ENV: staging

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: üü¢ Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, xml, ctype, json, curl, tokenizer, fileinfo, openssl, pdo, pdo_mysql
          tools: composer

      - name: üß± Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: üì¶ Install Node.js dependencies
        run: |
          npm ci
          npm run build

      - name: üì¶ Install Composer dependencies
        run: |
          composer install --no-dev --prefer-dist --optimize-autoloader

      - name: ‚öôÔ∏è Laravel optimizations
        run: |
          php artisan route:cache
          php artisan view:cache

      - name: üß™ Install Serverless CLI
        run: npm install -g serverless

      - name: ‚¨ÜÔ∏è Deploy to AWS (develop)
        run: serverless login && serverless deploy --stage develop
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: sa-east-1
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          SERVERLESS_LICENSE_KEY: ${{ secrets.SERVERLESS_LICENSE_KEY }}
          APP_NAME: ${{ vars.APP_NAME }}
          APP_ENV: ${{ vars.APP_ENV }}
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_DEBUG: ${{ vars.APP_DEBUG }}
          APP_URL: ${{ vars.APP_URL }}
          APP_PORT: ${{ vars.APP_PORT }}
          DB_CONNECTION: ${{ vars.DB_CONNECTION }}
          DB_HOST: ${{ vars.DB_HOST }}
          DB_PORT: ${{ vars.DB_PORT }}
          DB_DATABASE: ${{ vars.DB_DATABASE }}
          DB_USERNAME: ${{ vars.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          SESSION_DRIVER: ${{ vars.SESSION_DRIVER }}
          SESSION_LIFETIME: ${{ vars.SESSION_LIFETIME }}
          QUEUE_CONNECTION: ${{ vars.QUEUE_CONNECTION }}
          CACHE_STORE: ${{ vars.CACHE_STORE }}
          OPENAI_API_KEY: ${{ secrets.SLS_OPENAI_API_KEY }}
